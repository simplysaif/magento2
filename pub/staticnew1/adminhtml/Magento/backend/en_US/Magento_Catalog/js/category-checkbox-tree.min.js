define(['jquery','prototype','extjs/ext-tree-checkbox','mage/adminhtml/form'],function(jQuery){'use strict';return function(config){var tree,options={dataUrl:config.dataUrl,divId:config.divId,rootVisible:config.rootVisible,useAjax:config.useAjax,currentNodeId:config.currentNodeId,jsFormObject:config.jsFormObject,name:config.name,checked:config.checked,allowDrop:config.allowDrop,rootId:config.rootId,expanded:config.expanded,categoryId:config.categoryId,treeJson:config.treeJson},data={},parameters={},root={},len=0,key='',i=0;Ext.lib.Event.getTarget=function(e){var ee=e.browserEvent||e;return ee.target?Event.element(ee):null;};Ext.tree.TreePanel.Enhanced=function(el,config){Ext.tree.TreePanel.Enhanced.superclass.constructor.call(this,el,config);};Ext.extend(Ext.tree.TreePanel.Enhanced,Ext.tree.TreePanel,{loadTree:function(config,firstLoad){parameters=config.parameters,data=config.data,root=new Ext.tree.TreeNode(parameters);if(typeof parameters.rootVisible!='undefined'){this.rootVisible=parameters.rootVisible*1;}
this.nodeHash={};this.setRootNode(root);if(firstLoad){this.addListener('click',this.categoryClick.createDelegate(this));}
this.loader.buildCategoryTree(root,data);this.el.dom.innerHTML='';this.render();},categoryClick:function(node){node.getUI().check(!node.getUI().checked());}});jQuery(function(){var categoryLoader=new Ext.tree.TreeLoader({dataUrl:config.dataUrl});categoryLoader.processResponse=function(response,parent,callback){config=JSON.parse(response.responseText);this.buildCategoryTree(parent,config);if(typeof callback==='function'){callback(this,parent);}};categoryLoader.createNode=function(config){var node;config.uiProvider=Ext.tree.CheckboxNodeUI;if(config.children&&!config.children.length){delete config.children;node=new Ext.tree.AsyncTreeNode(config);}else{node=new Ext.tree.TreeNode(config);}
return node;};categoryLoader.processCategoryTree=function(parent,config,i){var node,_node={};config[i].uiProvider=Ext.tree.CheckboxNodeUI;_node=Object.clone(config[i]);if(_node.children&&!_node.children.length){delete _node.children;node=new Ext.tree.AsyncTreeNode(_node);}else{node=new Ext.tree.TreeNode(config[i]);}
parent.appendChild(node);node.loader=node.getOwnerTree().loader;if(_node.children){categoryLoader.buildCategoryTree(node,_node.children);}};categoryLoader.buildCategoryTree=function(parent,config){if(!config){return null;}
if(parent&&config&&config.length){for(i=0;i<config.length;i++){categoryLoader.processCategoryTree(parent,config,i);}}};categoryLoader.buildHashChildren=function(hash,node){if((node.childNodes.length>0)||(node.loaded===false&&node.loading===false)){hash.children=[];for(i=0,len=node.childNodes.length;i<len;i++){if(!hash.children){hash.children=[];}
hash.children.push(this.buildHash(node.childNodes[i]));}}
return hash;};categoryLoader.buildHash=function(node){var hash={};hash=this.toArray(node.attributes);return categoryLoader.buildHashChildren(hash,node);};categoryLoader.toArray=function(attributes){data={};for(key in attributes){if(attributes[key]){data[key]=attributes[key];}}
return data;};categoryLoader.on('beforeload',function(treeLoader,node){treeLoader.baseParams.id=node.attributes.id;});categoryLoader.on('load',function(){varienWindowOnload();});tree=new Ext.tree.TreePanel.Enhanced(options.divId,{animate:false,loader:categoryLoader,enableDD:false,containerScroll:true,selModel:new Ext.tree.CheckNodeMultiSelectionModel(),rootVisible:options.rootVisible,useAjax:options.useAjax,currentNodeId:options.currentNodeId,addNodeTo:false,rootUIProvider:Ext.tree.CheckboxNodeUI});tree.on('check',function(node){options.jsFormObject.updateElement.value=this.getChecked().join(', ');varienElementMethods.setHasChanges(node.getUI().checkbox);},tree);parameters={text:options.name,draggable:false,checked:options.checked,uiProvider:Ext.tree.CheckboxNodeUI,allowDrop:options.allowDrop,id:options.rootId,expanded:options.expanded,category_id:options.categoryId};tree.loadTree({parameters:parameters,data:options.treeJson},true);});};});