define(['Magento_Ui/js/dynamic-rows/dynamic-rows-grid','underscore','mageUtils'],function(DynamicRows,_,utils){'use strict';return DynamicRows.extend({defaults:{mappingSettings:{enabled:false,distinct:false},update:true,map:{'option_id':'option_id'},identificationProperty:'option_id',identificationDRProperty:'option_id'},processingInsertData:function(data){var options=[],currentOption,generalContext=this;if(!data){return;}
_.each(data,function(item){if(!item.options){return;}
_.each(item.options,function(option){currentOption=utils.copy(option);if(currentOption.hasOwnProperty('sort_order')){delete currentOption['sort_order'];}
if(currentOption.hasOwnProperty('option_id')){delete currentOption['option_id'];}
if(currentOption.values.length>0){generalContext.removeOptionsIds(currentOption.values);}
options.push(currentOption);});});if(!options.length){return;}
this.cacheGridData=options;_.each(options,function(opt){this.mappingValue(opt);},this);this.insertData([]);},removeOptionsIds:function(options){_.each(options,function(optionValue){delete optionValue['option_id'];delete optionValue['option_type_id'];});},processingAddChild:function(ctx,index,prop){if(!ctx){this.showSpinner(true);this.addChild(ctx,index,prop);return;}
this._super(ctx,index,prop);},clearDataProvider:function(){this.source.set(this.dataProvider,[]);},updateInsertData:function(){return false;}});});