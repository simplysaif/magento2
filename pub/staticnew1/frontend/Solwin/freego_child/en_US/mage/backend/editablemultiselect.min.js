define(['jquery','Magento_Ui/js/modal/alert','Magento_Ui/js/modal/confirm','jquery/editableMultiselect/js/jquery.editable','jquery/editableMultiselect/js/jquery.multiselect'],function($,alert,confirm){window.EditableMultiselect=function(settings){this.settings=settings||{};this.addButtonCaption=this.settings['add_button_caption']||'Add new value';this.newUrl=this.settings['new_url'];this.saveUrl=this.settings['save_url'];this.deleteUrl=this.settings['delete_url'];this.deleteConfirmMessage=this.settings['delete_confirm_message'];this.targetSelectId=this.settings['target_select_id'];this.submitData=this.settings['submit_data']||{};this.entityIdName=this.settings['entity_id_name']||'entity_id';this.entityValueName=this.settings['entity_value_name']||'entity_value';this.isEntityEditable=this.settings['is_entity_editable']||false;EditableMultiselect.prototype.init=function(){var self=this,mselectOptions={addText:this.addButtonCaption,mselectInputSubmitCallback:function(value,options){self.createEntity(value,options);}},mselectList;if(!this.isEntityEditable){mselectOptions.layout='<section class="block %mselectListClass%">'+'<div class="block-content"><div class="%mselectItemsWrapperClass%">'+'%items%'+'</div></div>'+'<div class="%mselectInputContainerClass%">'+'<input type="text" class="%mselectInputClass%" title="%inputTitle%"/>'+'<span class="%mselectButtonCancelClass%" title="%cancelText%"></span>'+'<span class="%mselectButtonSaveClass%" title="Add"></span>'+'</div>'+'</section>';}
$('#'+this.targetSelectId).multiselect(mselectOptions);if(this.isEntityEditable){this.makeMultiselectEditable();mselectList=$('#'+this.targetSelectId).next();this.attachEventsToControls(mselectList);}};EditableMultiselect.prototype.attachEventsToControls=function(mselectList){mselectList.on('click.mselect-delete','.mselect-delete',{container:this},function(event){event.data.container.deleteEntity({'delete_button':this});});mselectList.on('click.mselect-checked','.mselect-list-item input',{container:this},function(event){var el=$(this),checkedClassName='mselect-checked';el[el.is(':checked')?'addClass':'removeClass'](checkedClassName);event.data.container.makeMultiselectEditable();});mselectList.on('click.mselect-edit','.mselect-edit',{container:this},function(event){event.data.container.makeMultiselectEditable();$(this).parent().find('label span').trigger('dblclick');});};EditableMultiselect.prototype.makeMultiselectEditable=function(){var entityIdName=this.entityIdName,entityValueName=this.entityValueName,selectList=$('#'+this.targetSelectId).next();selectList.find('.mselect-list-item:not(.mselect-list-item-not-editable) label span').editable(this.saveUrl,{type:'text',submit:'<button class="mselect-save" title="Save" type="submit" />',cancel:'<span class="mselect-cancel" title="Cancel"></span>',event:'dblclick',placeholder:'',isChecked:function(){var that=$(this),checked;if(!that.closest('.mselect-list-item').hasClass('mselect-disabled')){checked=that.parent().find('[type=checkbox]').prop('disabled');that.parent().find('[type=checkbox]').prop({disabled:!checked});}},data:function(value,sett){var retval;sett.isChecked.apply(this,[sett]);if(typeof value==='string'){retval=value.unescapeHTML();return retval;}
return value;},submitdata:this.submitData,onblur:'cancel',name:entityValueName,ajaxoptions:{dataType:'json'},onsubmit:function(sett,original){var select=$(original).closest('.mselect-list').prev(),current=$(original).closest('.mselect-list-item').index(),entityId=select.find('option').eq(current).val(),entityInfo={};entityInfo[entityIdName]=entityId;sett.submitdata=$.extend(sett.submitdata||{},entityInfo);},callback:function(result,sett){var select,current;sett.isChecked.apply(this,[sett]);select=$(this).closest('.mselect-list').prev();current=$(this).closest('.mselect-list-item').index();if(result.success){if(typeof result[entityValueName]==='string'){select.find('option').eq(current).val(result[entityIdName]).text(result[entityValueName]);$(this).html(result[entityValueName].escapeHTML());}}else{alert({content:result['error_message']});}}});};EditableMultiselect.prototype.createEntity=function(value,options){var select,entityIdName,entityValueName,entityInfo,postData,ajaxOptions;if(!value){return;}
select=$('#'+this.targetSelectId),entityIdName=this.entityIdName,entityValueName=this.entityValueName,entityInfo={};entityInfo[entityIdName]=null;entityInfo[entityValueName]=value;postData=$.extend(entityInfo,this.submitData);ajaxOptions={type:'POST',data:postData,dataType:'json',url:this.newUrl,success:function(result){var resultEntityValueName,mselectItemHtml,sectionBlock,itemsWrapper,inputSelector;if(result.success){resultEntityValueName='';if(typeof result[entityValueName]==='string'){resultEntityValueName=result[entityValueName].escapeHTML();}else{resultEntityValueName=result[entityValueName];}
select.append('<option value="'+result[entityIdName]+'" selected="selected">'+
resultEntityValueName+'</option>');mselectItemHtml=$(options.item.replace(/%value%|%label%/gi,resultEntityValueName).replace(/%mselectDisabledClass%|%iseditable%|%isremovable%/gi,'').replace(/%mselectListItemClass%/gi,options.mselectListItemClass)).find('[type=checkbox]').attr('checked',true).addClass(options.mselectCheckedClass).end();sectionBlock=select.nextAll('section.block:first');itemsWrapper=sectionBlock.find('.'+options.mselectItemsWrapperClass+'');if(itemsWrapper.children('.'+options.mselectListItemClass+'').length){itemsWrapper.children('.'+options.mselectListItemClass+':last').after(mselectItemHtml);}else{itemsWrapper.prepend(mselectItemHtml);}
inputSelector='.'+options.mselectInputContainerClass+' [type=text].'+
options.mselectInputClass+'';sectionBlock.find(inputSelector).trigger('blur');}else{alert({content:result['error_message']});}}};$.ajax(ajaxOptions);};EditableMultiselect.prototype.deleteEntity=function(options){var self=this;if(options['delete_button']){confirm({content:this.deleteConfirmMessage,actions:{confirm:function(){var deleteButton=$(options['delete_button']),index=deleteButton.parent().index(),select=deleteButton.closest('.mselect-list').prev(),entityId=select.find('option').eq(index).val(),entityInfo={},postData,ajaxOptions;entityInfo[self.entityIdName]=entityId;postData=$.extend(entityInfo,self.submitData);ajaxOptions={type:'POST',data:postData,dataType:'json',url:self.deleteUrl,success:function(result){if(result.success){deleteButton.parent().remove();select.find('option').eq(index).remove();}else{alert({content:result['error_message']});}}};$.ajax(ajaxOptions);}}});}};};});